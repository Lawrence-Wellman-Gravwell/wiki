name: "Build HTML"
on: workflow_dispatch

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  html-build:
    name: Build HTML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Build and package documentation
        run: |
          # Fail on any error
          set -e

          # Make temporary location for build results
          export BUILD_DEST="$( mktemp --directory --tmpdir=${{ runner.temp }} )"

          # Fetch all remote refs
          git fetch --all

          # Pull latest from main branch
          git checkout main
          git pull

          # There should only be one marked "preferred": the latest release
          cat _static/versions.json | jq -r 'map(select(.preferred)) | length | if . != 1 then ("exactly one version should be marked preferred\n" | halt_error(1)) else "ok" end '

          # Build and copy to build destination
          nix-build
          cp -r ./result/html $BUILD_DEST
          chmod --recursive +w $BUILD_DEST

          # Checkout and build each non-latest version listed in versions.json. Then copy them to build destination.
          for v in $(cat _static/versions.json | jq -r 'map(select(.preferred != true)) | map(.version) | join(" ")')
          do
              git checkout release/$v
              git pull
              nix-build
              cp -r ./result/html $BUILD_DEST/html/$v
              chmod --recursive +w $BUILD_DEST
              echo "Disallow: /$v/" >> $BUILD_DEST/html/robots.txt
          done

          git checkout main
          nix-shell --run "dedup-links $BUILD_DEST/html"

          echo "BUILD_DEST=${BUILD_DEST}" >> "$GITHUB_ENV"

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ env.BUILD_DEST }}/html"

  deploy:
    name: Deploy Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: html-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
